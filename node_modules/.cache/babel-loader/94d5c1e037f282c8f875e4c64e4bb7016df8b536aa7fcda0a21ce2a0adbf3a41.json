{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Documents/react-proj/rohitreact/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport react, { useState } from 'react';\nimport Alert from './components/Alert';\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const [mode, setMode] = useState('light');\n\n  // const removeBodyClasses =()=> {\n  //   document.body.classList.remove('bg-primary')\n  //   document.body.classList.remove('bg-light')\n  //   document.body.classList.remove('bg-dark')\n  //   document.body.classList.remove('bg-warning')\n  //   document.body.classList.remove('bg-danger')\n  //   document.body.classList.remove('bg-success')\n  // }\n\n  const toggleMode = () => {\n    // removeBodyClasses();\n    // document.body.classList.add('bg-'+cls)\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enable\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enable\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"My First App\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Enter The Text To Analyze Below\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"3PANcZUkwn4FInWWHvNniS2W3SU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["About","Navbar","TextForm","react","useState","Alert","React","BrowserRouter","Router","Routes","Route","Link","App","alert","setAlert","showAlert","message","type","msg","setTimeout","mode","setMode","toggleMode","document","body","style","backgroundColor"],"sources":["/home/rohit/Documents/react-proj/rohitreact/src/App.js"],"sourcesContent":["import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport react, {useState} from 'react'\nimport Alert from './components/Alert';\n\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n    const [alert, setAlert] = useState(null)\n\n    const showAlert = (message,type) => {\n      setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    },2000)\n  }\n\n    const [mode, setMode] = useState('light')\n\n      // const removeBodyClasses =()=> {\n      //   document.body.classList.remove('bg-primary')\n      //   document.body.classList.remove('bg-light')\n      //   document.body.classList.remove('bg-dark')\n      //   document.body.classList.remove('bg-warning')\n      //   document.body.classList.remove('bg-danger')\n      //   document.body.classList.remove('bg-success')\n      // }\n\n      const toggleMode=()=>{\n        // removeBodyClasses();\n      // document.body.classList.add('bg-'+cls)\n      if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enable\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enable\",\"success\");\n    } \n  }\n    return (\n      <>\n      {/* <Navbar title =\"My First App\" aboutText =\"About Us\" /> */}\n      {/* <Navbar/> */}\n      <Router>\n      <Navbar title =\"My First App\" mode= {mode} toggleMode={toggleMode}/>\n      <Alert alert= {alert}/>\n      <div className=\"container my-3\">\n      <Routes>\n          <Route exact path=\"/about\" element = {<About mode ={mode}/>} />\n          {/* <Route exact path=\"/about\" element = {<About/>} /> */}\n          <Route exact path=\"/\" element ={<TextForm  showAlert ={showAlert} heading = \"Enter The Text To Analyze Below\"mode= {mode} />} />      \n        </Routes>\n\n      </div>\n      </Router>\n      </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC,kBAAkB;AAAC;AAAA;AAG1B,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,SAAS,GAAG,CAACC,OAAO,EAACC,IAAI,KAAK;IAClCH,QAAQ,CAAC;MACTI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAC,IAAI,CAAC;EACT,CAAC;EAEC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,OAAO,CAAC;;EAEvC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMkB,UAAU,GAAC,MAAI;IACnB;IACF;IACA,IAAGF,IAAI,KAAK,OAAO,EAAC;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CX,SAAS,CAAC,2BAA2B,EAAC,SAAS,CAAC;IAClD,CAAC,MACG;MACFM,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CX,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IACnD;EACF,CAAC;EACC,oBACE;IAAA,uBAGA,QAAC,MAAM;MAAA,wBACP,QAAC,MAAM;QAAC,KAAK,EAAE,cAAc;QAAC,IAAI,EAAGK,IAAK;QAAC,UAAU,EAAEE;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE,eACpE,QAAC,KAAK;QAAC,KAAK,EAAGT;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eACvB;QAAK,SAAS,EAAC,gBAAgB;QAAA,uBAC/B,QAAC,MAAM;UAAA,wBACH,QAAC,KAAK;YAAC,KAAK;YAAC,IAAI,EAAC,QAAQ;YAAC,OAAO,eAAI,QAAC,KAAK;cAAC,IAAI,EAAGO;YAAK;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAAG,eAE/D,QAAC,KAAK;YAAC,KAAK;YAAC,IAAI,EAAC,GAAG;YAAC,OAAO,eAAG,QAAC,QAAQ;cAAE,SAAS,EAAGL,SAAU;cAAC,OAAO,EAAG,iCAAiC;cAAA,IAAI,EAAGK;YAAK;cAAA;cAAA;cAAA;YAAA;UAAI;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MACzH;QAAA;QAAA;QAAA;MAAA,QAEL;IAAA;MAAA;MAAA;MAAA;IAAA;EACG,iBACN;AAET;AAAC,GAxDQR,GAAG;AAAA,KAAHA,GAAG;AA0DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}