{"ast":null,"code":"var _jsxFileName = \"/home/rohit/Documents/react-proj/rohitreact/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport react, { useState } from 'react';\nimport Alert from './components/Alert';\nimport Color from './components/Color';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const [mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enable\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enable\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"My First App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter The Text To Analyze Below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Color, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"3PANcZUkwn4FInWWHvNniS2W3SU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","react","useState","Alert","Color","App","alert","setAlert","showAlert","message","type","msg","setTimeout","mode","setMode","toggleMode","document","body","style","backgroundColor"],"sources":["/home/rohit/Documents/react-proj/rohitreact/src/App.js"],"sourcesContent":["import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport react, {useState} from 'react'\nimport Alert from './components/Alert';\nimport Color from './components/Color';\n\n\nfunction App() {\n    const [alert, setAlert] = useState(null)\n\n    const showAlert = (message,type) => {\n      setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    },2000)\n  }\n\n    const [mode, setMode] = useState('light')\n    \n\n    const toggleMode = () => {\n      if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enable\",\"success\");\n      \n\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enable\",\"success\");\n      \n    } \n  }\n    return (\n      <>\n        {/* <Navbar title =\"My First App\" aboutText =\"About Us\" /> */}\n      {/* <Navbar/> */}\n      {/* <Navbar title =\"My First App\" mode= {mode} toggleMode={toggleMode} /> */}\n      <Navbar title =\"My First App\" />\n      <Alert alert= {alert}/>\n      \n      <div className=\"container my-3\">\n      <TextForm  showAlert ={showAlert} heading = \"Enter The Text To Analyze Below\"mode= {mode} /> \n      <Color/>\n      {/* <About/> */}\n      </div>\n      \n      </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB;AACA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAAA;AAGvC,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMM,SAAS,GAAG,CAACC,OAAO,EAACC,IAAI,KAAK;IAClCH,QAAQ,CAAC;MACTI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAC,IAAI,CAAC;EACT,CAAC;EAEC,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;EAGzC,MAAMa,UAAU,GAAG,MAAM;IACvB,IAAGF,IAAI,KAAK,OAAO,EAAC;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CX,SAAS,CAAC,2BAA2B,EAAC,SAAS,CAAC;IAGlD,CAAC,MACG;MACFM,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CX,SAAS,CAAC,4BAA4B,EAAC,SAAS,CAAC;IAEnD;EACF,CAAC;EACC,oBACE;IAAA,wBAIA,QAAC,MAAM;MAAC,KAAK,EAAE;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAChC,QAAC,KAAK;MAAC,KAAK,EAAGF;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eAEvB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC/B,QAAC,QAAQ;QAAE,SAAS,EAAGE,SAAU;QAAC,OAAO,EAAG,iCAAiC;QAAA,IAAI,EAAGK;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5F,QAAC,KAAK;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAEF;EAAA,gBAEH;AAET;AAAC,GA/CQR,GAAG;AAAA,KAAHA,GAAG;AAiDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}