[{"/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/index.js":"1","/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/reportWebVitals.js":"2","/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/App.js":"3","/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/components/Navbar.js":"4","/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/components/Alert.js":"5","/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/components/About.js":"6","/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/components/TextForm.js":"7"},{"size":535,"mtime":1671692019072,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1671692019124,"results":"10","hashOfConfig":"9"},{"size":2130,"mtime":1675965239478,"results":"11","hashOfConfig":"9"},{"size":3796,"mtime":1675965138652,"results":"12","hashOfConfig":"9"},{"size":646,"mtime":1675965212557,"results":"13","hashOfConfig":"9"},{"size":4848,"mtime":1675965209861,"results":"14","hashOfConfig":"9"},{"size":3402,"mtime":1675965020095,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rd5byo",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/index.js",[],[],"/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/reportWebVitals.js",[],[],"/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/App.js",["39"],[],"import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport react, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const [mode, setMode] = useState(\"light\");\n\n  // const removeBodyClasses =()=> {\n  //   document.body.classList.remove('bg-primary')\n  //   document.body.classList.remove('bg-light')\n  //   document.body.classList.remove('bg-dark')\n  //   document.body.classList.remove('bg-warning')\n  //   document.body.classList.remove('bg-danger')\n  //   document.body.classList.remove('bg-success')\n  // }\n\n  const toggleMode = () => {\n    // removeBodyClasses();\n    // document.body.classList.add('bg-'+cls)\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enable\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enable\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Navbar title =\"My First App\" aboutText =\"About Us\" /> */}\n      {/* <Navbar/> */}\n      <Router>\n        <Navbar title=\"My First App\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode} />} />\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"Enter The Text To Analyze Below\"\n                  mode={mode}\n                />\n              }\n            />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/components/Navbar.js",[],[],"/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/components/Alert.js",[],[],"/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/components/About.js",[],[],"/home/rohit/Documents/react-proj/React Apps/firstreactapp/src/components/TextForm.js",["40","41"],[],"import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase !\", \"success\");\n  };\n  const handleLoClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase !\", \"success\");\n  };\n  const handleClearClick = () => {\n    let newText = \"\";\n    setText(newText);\n    props.showAlert(\"Text Cleared !\", \"success\");\n  };\n  const handleCopy = () => {\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"Copied to Clipboard !\", \"success\");\n  };\n  const handleTitleClick = () => {\n    let newText = text.replace(/\\w\\S*/g, function (t) {\n      return t.charAt(0).toUpperCase() + t.slice(1);\n    });\n    setText(newText);\n    props.showAlert(\"Converted to camelcase\", \"success\");\n  };\n  const handleExtraSpaces = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Extra Spaces Removed\", \"success\");\n  };\n\n  const handleOnChange = (event) => {\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"\");\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\n      >\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnChange}\n            style={{\n              backgroundColor:\n                props.mode === \"dark\" ? \"rgb(36 74 104)\" : \"white\",\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\n            }}\n            id=\"myBox\"\n            rows=\"8\"\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>\n          Convert To Uppercase\n        </button>\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>\n          Convert To Lowercase\n        </button>\n        <button\n          className=\"btn btn-primary mx-2 my-2\"\n          onClick={handleClearClick}\n        >\n          Clear Text\n        </button>\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>\n          Copy Text\n        </button>\n        <button\n          className=\"btn btn-primary mx-2 my-2\"\n          onClick={handleTitleClick}\n        >\n          Convert To Camelcase\n        </button>\n        <button\n          className=\"btn btn-primary mx-2 my-2\"\n          onClick={handleExtraSpaces}\n        >\n          Remove Extra Spaces\n        </button>\n      </div>\n      <div\n        className=\"container my-2\"\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\n      >\n        <h2>Your Text Summary</h2>\n        <p>\n          {\n            text.split(/\\s+/).filter((element) => {\n              return element.length != 0;\n            }).length\n          }{\" \"}\n          Words and {text.length} Characters\n        </p>\n        <p>\n          {0.008 *\n            text.split(\" \").filter((element) => {\n              return element.length != 0;\n            }).length}{\" \"}\n          Minutes Read\n        </p>\n        <h2>Preview</h2>\n        <p>\n          {text.length > 0\n            ? text\n            : \"Enter something in the textbox above to preview it here\"}\n        </p>\n      </div>\n    </>\n  );\n}\n",{"ruleId":"42","severity":1,"message":"43","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":13},{"ruleId":"46","severity":1,"message":"47","line":97,"column":37,"nodeType":"48","messageId":"49","endLine":97,"endColumn":39},{"ruleId":"46","severity":1,"message":"47","line":105,"column":37,"nodeType":"48","messageId":"49","endLine":105,"endColumn":39},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]